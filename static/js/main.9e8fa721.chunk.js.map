{"version":3,"sources":["Components/Keyboard.js","Components/Display.js","Components/Volume.js","App.js","serviceWorker.js","index.js"],"names":["letters","Keyboard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyboardPress","bind","assertThisInitialized","document","addEventListener","event","node","ReactDOM","findDOMNode","includes","key","toUpperCase","querySelector","concat","click","_this2","keys","map","e","i","react_default","a","createElement","id","onMouseDown","target","style","backgroundColor","onMouseUp","className","onClick","drumButtonHandler","data-num","preload","volume","vol","src","audioSet","slice","Component","Display","input","Volume","state","volSlider","powerOn","type","step","min","max","value","volumeVal","data-orientation","onChange","handleVolChange","disabled","PureComponent","App","handlePowerClick","handleDrumButtonClick","handleBankClick","handleRangeChange","HeatherKit","SmoothPianoKit","bank","num","set","displayVal","setState","Math","floor","soundNum","children","play","attributes","powerState","bankSwitch","Components_Keyboard","Display_Display","Components_Volume","Boolean","window","location","hostname","match","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6TAIIA,eAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAgDxCC,cA7Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,oBAAsBP,EAAKO,oBAAoBC,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFVA,mFAKjBU,SAASC,iBAAiB,UAAWR,KAAKI,iEAExBK,GAClB,IAAMC,EAAOC,IAASC,YAAYZ,MAE9BN,EAAQmB,SAASJ,EAAMK,IAAIC,gBACpBL,EAAKM,cAAL,IAAAC,OAAuBR,EAAMK,IAAIC,gBACnCG,yCAGF,IAAAC,EAAAnB,KACDoB,EAAO1B,EAAQ2B,IAAI,SAACC,EAAGC,GAAJ,OACvBC,EAAAC,EAAAC,cAAA,OACEZ,IAAKQ,EACLK,GAAIL,EACJM,YAAa,SAAAN,GAAC,OAAKA,EAAEO,OAAOC,MAAMC,gBAAkB,OACpDC,UAAW,SAAAV,GAAC,OAAKA,EAAEO,OAAOC,MAAMC,gBAAkB,IAClDE,UAAU,WACVC,QAASf,EAAKvB,MAAMuC,kBACpBC,WAAUb,GAEVC,EAAAC,EAAAC,cAAA,SACEC,GAAIL,EACJW,UAAU,OACVI,QAAQ,OACRC,OAAQnB,EAAKvB,MAAM2C,IACnBC,IAAKrB,EAAKvB,MAAM6C,SAASlB,GAAG,KAE9BC,EAAAC,EAAAC,cAAA,YAAOJ,MAGX,OACEE,EAAAC,EAAAC,cAAA,WAASO,UAAU,YACjBT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAAgBb,EAAKsB,MAAM,EAAG,IAC7ClB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAAgBb,EAAKsB,MAAM,EAAG,IAC7ClB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAAgBb,EAAKsB,MAAM,YAzC3BC,mBCJR,SAASC,EAAQhD,GAC9B,OACE4B,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUM,UAAU,WACzBrC,EAAMiD,OAASjD,EAAMiD,iBCkCbC,cAnCb,SAAAA,EAAYlD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACjBjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KAAMJ,KACDmD,MAAQ,GAFIlD,wEAMjB,IAAImD,EAyBJ,OAvBAA,EAAYhD,KAAKJ,MAAMqD,QACrBzB,EAAAC,EAAAC,cAAA,SACEwB,KAAK,QACLC,KAAK,OACLC,IAAI,IACJC,IAAI,IACJC,MAAOtD,KAAK+C,MAAMQ,UAClBC,mBAAiB,aACjBvB,UAAU,0BACVwB,SAAUzD,KAAKJ,MAAM8D,kBAGvBlC,EAAAC,EAAAC,cAAA,SACEwB,KAAK,QACLC,KAAK,OACLC,IAAI,IACJC,IAAI,IACJC,MAAOtD,KAAK+C,MAAMQ,UAClBC,mBAAiB,aACjBvB,UAAU,0BACV0B,UAAQ,IAGLnC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UAAUe,EAAzB,YAhCUY,iBC6KNC,cAzKb,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACjBhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KACDkE,iBAAmBjE,EAAKiE,iBAAiBzD,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKkE,sBAAwBlE,EAAKkE,sBAAsB1D,KAA3BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC7BA,EAAKmE,gBAAkBnE,EAAKmE,gBAAgB3D,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACvBA,EAAKoE,kBAAoBpE,EAAKoE,kBAAkB5D,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAKzBA,EAAKqE,WAAa,CAChB,CAAC,YAAa,4DACd,CAAC,YAAa,4DACd,CAAC,YAAa,4DACd,CACE,YACA,8DAEF,CAAC,OAAQ,4DACT,CAAC,UAAW,0DACZ,CACE,cACA,8DAEF,CAAC,OAAQ,8DACT,CAAC,YAAa,2DAGhBrE,EAAKsE,eAAiB,CACpB,CAAC,UAAW,4DACZ,CAAC,UAAW,4DACZ,CAAC,UAAW,4DACZ,CAAC,SAAU,8DACX,CAAC,UAAW,4DACZ,CAAC,YAAa,0DACd,CACE,cACA,8DAEF,CACE,aACA,8DAEF,CAAC,QAAS,2DAEZtE,EAAKkD,MAAQ,CACXE,SAAS,EACTmB,MAAM,EACN3B,SAAU,CAAE4B,IAAK,EAAGC,IAAKzE,EAAKqE,YAC9BK,WAAY,GACZhB,UAAW,IAlDI1D,iFAsDDY,GAChBT,KAAKwE,SAAS,CACZjB,UAAW9C,EAAMoB,OAAOyB,MACxBiB,WAAU,WAAAtD,OAAawD,KAAKC,MAA2B,IAArBjE,EAAMoB,OAAOyB,qDAIjDtD,KAAK+C,MAAME,QACPjD,KAAKwE,SAAS,CAAEvB,SAAS,EAAOsB,WAAY,KAC5CvE,KAAKwE,SAAS,CAAEvB,SAAS,8CAGzBjD,KAAK+C,MAAME,UACmB,IAA5BjD,KAAK+C,MAAMN,SAAS4B,IACtBrE,KAAKwE,SAAS,CACZ/B,SAAU,CAAE4B,IAAK,EAAGC,IAAKtE,KAAKmE,gBAC9BI,WAAY,qBAEuB,IAA5BvE,KAAK+C,MAAMN,SAAS4B,KAC7BrE,KAAKwE,SAAS,CACZ/B,SAAU,CAAE4B,IAAK,EAAGC,IAAKtE,KAAKkE,YAC9BK,WAAY,+DAME9D,GAMlB,IAAIkE,EALF3E,KAAK+C,MAAME,UACTxC,EAAMoB,OAAO+C,UAAYnE,EAAMoB,OAAO+C,SAAS,KACjDnE,EAAMoB,OAAO+C,SAAS,GAAGtC,OAAStC,KAAK+C,MAAMQ,UAC7C9C,EAAMoB,OAAO+C,SAAS,GAAGC,QAGvBpE,EAAMoB,OAAOiD,YAAcrE,EAAMoB,OAAOiD,WAAW,cACrDH,EAAWlE,EAAMoB,OAAOiD,WAAW,YAAYxB,OAE7CqB,GACF3E,KAAKwE,SAAS,CAAED,WAAYvE,KAAK+C,MAAMN,SAAS6B,IAAIK,GAAU,uCAMlE,IAAII,EACAC,EAAa,GAuBjB,OAtBiCA,EAAL,IAA5BhF,KAAK+C,MAAMN,SAAS4B,IAA0B,MAAuB,KAGnEU,EADE/E,KAAK+C,MAAME,QAEXzB,EAAAC,EAAAC,cAAA,OACEQ,QAASlC,KAAK8D,iBACd7B,UAAU,uFAEVT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qDAKjBT,EAAAC,EAAAC,cAAA,OACEQ,QAASlC,KAAK8D,iBACd7B,UAAU,wFAEVT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qDAMnBT,EAAAC,EAAAC,cAAA,QAAMO,UAAU,eAAeN,GAAG,gBAChCH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,0BACbT,EAAAC,EAAAC,cAACuD,EAAD,CACE1C,IAAKvC,KAAK+C,MAAMQ,UAChBpB,kBAAmBnC,KAAK+D,sBACxBtB,SAAUzC,KAAK+C,MAAMN,SAAS6B,OAGlC9C,EAAAC,EAAAC,cAAA,OAAKO,UAAU,2BACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,iCACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,2BAEjBT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sCACbT,EAAAC,EAAAC,cAAA,QAAMO,UAAU,6CAAhB,SAGC8C,GAGHvD,EAAAC,EAAAC,cAACwD,EAAD,CACErC,MAAO7C,KAAK+C,MAAMwB,WAClB9B,SAAUzC,KAAK+C,MAAMN,SAAS6B,MAEhC9C,EAAAC,EAAAC,cAACyD,EAAD,CACElC,QAASjD,KAAK+C,MAAME,QACpBS,gBAAiB1D,KAAKiE,oBAExBzC,EAAAC,EAAAC,cAAA,OACEO,UAAU,uEACVC,QAASlC,KAAKgE,iBAEdxC,EAAAC,EAAAC,cAAA,QAAMO,UAAU,6CAAhB,QAGAT,EAAAC,EAAAC,cAAA,OACEO,UAAS,oFAAAhB,OAAsF+D,IAE/FxD,EAAAC,EAAAC,cAAA,OAAKO,UAAU,+DAjKXU,aCMEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXN7E,IAAS8E,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASnF,SAASoF,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9e8fa721.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../Styles/Keyboard.sass\";\n\nlet letters = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\nclass Keyboard extends Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyboardPress = this.handleKeyboardPress.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyboardPress);\n  }\n  handleKeyboardPress(event) {\n    const node = ReactDOM.findDOMNode(this);\n    let button;\n    if (letters.includes(event.key.toUpperCase())) {\n      button = node.querySelector(`#${event.key.toUpperCase()}`);\n      button.click();\n    }\n  }\n  render() {\n    const keys = letters.map((e, i) => (\n      <div\n        key={e}\n        id={e}\n        onMouseDown={e => (e.target.style.backgroundColor = \"red\")}\n        onMouseUp={e => (e.target.style.backgroundColor = \"\")}\n        className=\"drum-pad\"\n        onClick={this.props.drumButtonHandler}\n        data-num={i}\n      >\n        <audio\n          id={e}\n          className=\"clip\"\n          preload=\"auto\"\n          volume={this.props.vol}\n          src={this.props.audioSet[i][1]}\n        />\n        <span>{e}</span>\n      </div>\n    ));\n    return (\n      <section className=\"keyboard\">\n        <div className=\"keyboard-row\">{keys.slice(0, 3)}</div>\n        <div className=\"keyboard-row\">{keys.slice(3, 6)}</div>\n        <div className=\"keyboard-row\">{keys.slice(6)}</div>\n      </section>\n    );\n  }\n}\nexport default Keyboard;\n","import React from \"react\";\nimport \"../Styles/Display.sass\";\nexport default function Display(props) {\n  return (\n    <div id=\"display\" className=\"display\">\n      {props.input && props.input}\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport \"../Styles/Volume.sass\";\n\nclass Volume extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let volSlider;\n\n    volSlider = this.props.powerOn ? (\n      <input\n        type=\"range\"\n        step=\"0.01\"\n        min=\"0\"\n        max=\"1\"\n        value={this.state.volumeVal}\n        data-orientation=\"horizontal\"\n        className=\"volume__volume-bar__bar\"\n        onChange={this.props.handleVolChange}\n      />\n    ) : (\n      <input\n        type=\"range\"\n        step=\"0.01\"\n        min=\"0\"\n        max=\"1\"\n        value={this.state.volumeVal}\n        data-orientation=\"horizontal\"\n        className=\"volume__volume-bar__bar\"\n        disabled\n      />\n    );\n    return <div className=\"volume\">{volSlider} </div>;\n  }\n}\n\nexport default Volume;\n","import React, { Component } from \"react\";\nimport \"./Styles/App.sass\";\nimport Keyboard from \"./Components/Keyboard\";\nimport Display from \"./Components/Display\";\nimport Volume from \"./Components/Volume\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePowerClick = this.handlePowerClick.bind(this);\n    this.handleDrumButtonClick = this.handleDrumButtonClick.bind(this);\n    this.handleBankClick = this.handleBankClick.bind(this);\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n\n    //\n    //\n    //\n    this.HeatherKit = [\n      [\"Heather 1\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"],\n      [\"Heather 2\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"],\n      [\"Heather 3\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"],\n      [\n        \"Heather 4\",\n        \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n      ],\n      [\"Clap\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"],\n      [\"Open HH\", \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"],\n      [\n        \"Kick n' Hat\",\n        \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n      ],\n      [\"Kick\", \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"],\n      [\"Closed HH\", \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"]\n    ];\n    //\n    this.SmoothPianoKit = [\n      [\"Chord 1\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"],\n      [\"Chord 2\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"],\n      [\"Chord 3\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"],\n      [\"Shaker\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"],\n      [\"Open HH\", \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"],\n      [\"Closed HH\", \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"],\n      [\n        \"Punchy Kick\",\n        \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n      ],\n      [\n        \"Side Stick\",\n        \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n      ],\n      [\"Snare\", \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"]\n    ];\n    this.state = {\n      powerOn: true,\n      bank: false,\n      audioSet: { num: 1, set: this.HeatherKit },\n      displayVal: \"\",\n      volumeVal: 0.5\n    };\n  }\n\n  handleRangeChange(event) {\n    this.setState({\n      volumeVal: event.target.value,\n      displayVal: `Volume: ${Math.floor(event.target.value * 100)}`\n    });\n  }\n  handlePowerClick() {\n    this.state.powerOn\n      ? this.setState({ powerOn: false, displayVal: \"\" })\n      : this.setState({ powerOn: true });\n  }\n  handleBankClick() {\n    if (this.state.powerOn) {\n      if (this.state.audioSet.num === 0) {\n        this.setState({\n          audioSet: { num: 1, set: this.SmoothPianoKit },\n          displayVal: \"Smooth Piano Kit\"\n        });\n      } else if (this.state.audioSet.num === 1) {\n        this.setState({\n          audioSet: { num: 0, set: this.HeatherKit },\n          displayVal: \"Heather Kit\"\n        });\n      }\n    }\n  }\n\n  handleDrumButtonClick(event) {\n    if (this.state.powerOn) {\n      if (event.target.children && event.target.children[0]) {\n        event.target.children[0].volume = this.state.volumeVal;\n        event.target.children[0].play();\n      }\n      let soundNum;\n      if (event.target.attributes && event.target.attributes[\"data-num\"]) {\n        soundNum = event.target.attributes[\"data-num\"].value;\n      }\n      if (soundNum) {\n        this.setState({ displayVal: this.state.audioSet.set[soundNum][0] });\n      }\n    }\n  }\n\n  render() {\n    let powerState;\n    let bankSwitch = \"\";\n    this.state.audioSet.num === 1 ? (bankSwitch = \"off\") : (bankSwitch = \"on\");\n\n    if (this.state.powerOn) {\n      powerState = (\n        <div\n          onClick={this.handlePowerClick}\n          className=\"drum-machine__right-pad__power-bar__bar drum-machine__right-pad__power-bar__bar--on\"\n        >\n          <div className=\"drum-machine__right-pad__power-bar__bar__switch\" />\n        </div>\n      );\n    } else {\n      powerState = (\n        <div\n          onClick={this.handlePowerClick}\n          className=\"drum-machine__right-pad__power-bar__bar drum-machine__right-pad__power-bar__bar--off\"\n        >\n          <div className=\"drum-machine__right-pad__power-bar__bar__switch\" />\n        </div>\n      );\n    }\n\n    return (\n      <main className=\"drum-machine\" id=\"drum-machine\">\n        <div className=\"drum-machine__left-pad\">\n          <Keyboard\n            vol={this.state.volumeVal}\n            drumButtonHandler={this.handleDrumButtonClick}\n            audioSet={this.state.audioSet.set}\n          />\n        </div>\n        <div className=\"drum-machine__right-pad\">\n          <div className=\"drum-machine__right-pad__logo\">\n            <div className=\"fab fa-free-code-camp\" />\n          </div>\n          <div className=\"drum-machine__right-pad__power-bar\">\n            <span className=\"drum-machine__right-pad__power-bar__title\">\n              POWER\n            </span>\n            {powerState}\n          </div>\n\n          <Display\n            input={this.state.displayVal}\n            audioSet={this.state.audioSet.set}\n          />\n          <Volume\n            powerOn={this.state.powerOn}\n            handleVolChange={this.handleRangeChange}\n          />\n          <div\n            className=\"drum-machine__right-pad__power-bar drum-machine__right-pad__bank-bar\"\n            onClick={this.handleBankClick}\n          >\n            <span className=\"drum-machine__right-pad__power-bar__title\">\n              BANK\n            </span>\n            <div\n              className={`drum-machine__right-pad__power-bar__bar drum-machine__right-pad__power-bar__bar--${bankSwitch}`}\n            >\n              <div className=\"drum-machine__right-pad__power-bar__bar__switch\" />\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.sass\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}